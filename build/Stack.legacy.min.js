/*
 *****************************************************************************
 Copyright (c) Microsoft Corporation. All rights reserved.
 Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 this file except in compliance with the License. You may obtain a copy of the
 License at http://www.apache.org/licenses/LICENSE-2.0

 THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
 WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
 MERCHANTABLITY OR NON-INFRINGEMENT.

 See the Apache Version 2.0 License for specific language governing permissions
 and limitations under the License.
*****************************************************************************/
var g = this;
function h() {
    function q(a, b) { var c = "function" === typeof Symbol && a[Symbol.iterator]; if (!c) return a; a = c.call(a); var f, m = []; try { for (; (void 0 === b || 0 < b--) && !(f = a.next()).done;)m.push(f.value) } catch (r) { var n = { error: r } } finally { try { f && !f.done && (c = a["return"]) && c.call(a) } finally { if (n) throw n.error; } } return m } function p() { for (var a = [], b = 0; b < arguments.length; b++)a = a.concat(q(arguments[b])); return a } var d = new WeakMap, e = [], k = [], l; return function () {
        function a(b) { void 0 === b && (b = []); d.set(this, []); this.push.apply(this, p(b)) }
        a.prototype.clear = function () { d.set(this, []); return this }; a.prototype.push = function () { for (var b = [], c = 0; c < arguments.length; c++)b[c] = arguments[c]; e = d.get(this); b.forEach(function (f) { e.push(f) }); return this }; a.prototype.pop = function (b) { void 0 === b && (b = 1); e = []; k = d.get(this); b = Math.min(b, k.length); for (l = 0; l < b; l++)e.push(k.splice(-1, 1)[0]); return e }; a.prototype.peek = function () { e = d.get(this); return e[e.length - 1] }; a.prototype.size = function () { return d.get(this).length }; a.prototype.isEmpty = function () {
            return 0 ===
                d.get(this).length
        }; a.prototype.toArray = function () { return p(d.get(this)) }; return a
    }()
} "object" === typeof exports && "undefined" !== typeof module ? module.b = h() : "function" === typeof define && define.a ? define(h) : (g = g || self, g.Stack = h());
